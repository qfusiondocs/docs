(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{710:function(e,s,v){"use strict";v.r(s);var t=v(92),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,v=e._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"环境变量和模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#环境变量和模式"}},[e._v("#")]),e._v(" 环境变量和模式")]),e._v(" "),v("p",[e._v("可以在项目根目录中添加以下文件来为项目指定环境变量：")]),e._v(" "),v("div",{staticClass:"language-shell line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[e._v(".env               "),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在所有的环境中被载入")]),e._v("\n.env.local         "),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在所有的环境中被载入，但是会被 git 忽略")]),e._v("\n.env."),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("mode"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("        "),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在指定的模式下被载入")]),e._v("\n.env."),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("mode"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(".local  "),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在指定的模式下载入，但是会被 git 忽略")]),e._v("\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br"),v("span",{staticClass:"line-number"},[e._v("2")]),v("br"),v("span",{staticClass:"line-number"},[e._v("3")]),v("br"),v("span",{staticClass:"line-number"},[e._v("4")]),v("br")])]),v("p",[e._v("一个 dotenv 文件中只可包含环境变量的键值对，例如:")]),e._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("FOO=bar\nAPP_URL=https://example.com/\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br"),v("span",{staticClass:"line-number"},[e._v("2")]),v("br")])]),v("p",[e._v("被载入的环境变量会对 "),v("code",[e._v("@luban-cli/cli-plugin-service")]),e._v(" 以及其插件、依赖可用。")]),e._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[e._v("环境加载属性")]),e._v(" "),v("p",[e._v("为一个特定模式准备的环境文件 (例如 "),v("em",[e._v(".env.production")]),e._v(") 将会比一般的环境文件 (例如 "),v("em",[e._v(".env")]),e._v(") 拥有更高的优先级。")]),e._v(" "),v("p",[e._v("此外，Luban 启动时已经存在的环境变量拥有最高优先级，并不会被 "),v("em",[e._v(".env")]),e._v(" 文件覆写。")])]),e._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[e._v("🙋")]),e._v(" "),v("p",[e._v("对于 dotenv 文件的优先级如下："),v("em",[e._v(".env.[mode].local > .env.[mode] > env.local > .env")])])]),e._v(" "),v("h2",{attrs:{id:"模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#模式"}},[e._v("#")]),e._v(" 模式")]),e._v(" "),v("p",[e._v("一个 CLI 创建的项目通常有两种模式：")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("development")]),e._v(" 模式被用于 "),v("code",[e._v("cli-plugin-service serve")])]),e._v(" "),v("li",[v("code",[e._v("production")]),e._v(" 模式被用于 "),v("code",[e._v("cli-plugin-service build")])])]),e._v(" "),v("p",[e._v("模式(mode) 不同于 "),v("code",[e._v("process.env.NODE_ENV")]),e._v(" ，一个模式下可以包含多个环境变量。可以为 "),v("em",[e._v(".env")]),e._v(" 文件添加模式后缀来指定特定模式下的环境变量，比如在项目根目录下创建 "),v("em",[e._v(".env.development")]),e._v(" 文件，这个文件就会在 development 模式被载入。")]),e._v(" "),v("p",[e._v("然后可以通过 mode 参数来使用特定模式下的环境变量:")]),e._v(" "),v("div",{staticClass:"language-shell line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[e._v("cli-plugin-service serve --mode development\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br")])]),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[e._v("🙋")]),e._v(" "),v("p",[v("code",[e._v("cli-plugin-service server")]),e._v(" 会将 "),v("code",[e._v("process.env.NODE_ENV")]),e._v(" 设置为 "),v("code",[e._v("development")]),e._v(", "),v("code",[e._v("cli-plugin-service build")]),e._v(" 会将 "),v("code",[e._v("process.env.NODE_ENV")]),e._v(" 设置为 "),v("code",[e._v("production")]),e._v(", 建议不要将 "),v("code",[e._v("process.env.NODE_ENV")]),e._v(" 设置为其他值，因为其他库也可能使用了这个值来区分环境。")])]),e._v(" "),v("p",[v("strong",[e._v("示例：mock 模式")])]),e._v(" "),v("p",[e._v("假设项目根目录下存在一个 "),v("em",[e._v(".env")]),e._v(" 文件:")]),e._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("APP_URL=https://example.com\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br")])]),v("p",[e._v("和 "),v("em",[e._v(".env.mock")]),e._v(" 文件")]),e._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("MOCK=true\nAPP_URL=https://example.mock.com\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br"),v("span",{staticClass:"line-number"},[e._v("2")]),v("br")])]),v("ol",[v("li",[e._v("运行 "),v("code",[e._v("cli-plugin-service build")]),e._v(" 将会加载可能存在的 "),v("em",[e._v(".env")]),e._v(", "),v("em",[e._v(".env.production")]),e._v(", "),v("em",[e._v(".env.production.local")]),e._v(" 文件，然后根据这些文件中的环境变量来构建可用于生产环境应用。")]),e._v(" "),v("li",[e._v("运行 "),v("code",[e._v("cli-plugin-service build --mode=mock")]),e._v(" 将会加载可能存在的 "),v("em",[e._v(".env.mock")]),e._v(", "),v("em",[e._v(".env.mock.local")]),e._v(" 文件，然后根据这些环境变量来构建可用于生产环境的应用。")])]),e._v(" "),v("p",[e._v("这两种情况下，由于运行的是 build 命令，所以都是构建用于生产环境的应用，但是在 mock 模式下，"),v("code",[e._v("process.env.APP_URL")]),e._v(" 将会被覆写为另外一个值。")]),e._v(" "),v("p",[e._v("同时，只有以 "),v("code",[e._v("/^APP_/")]),e._v(" 开头的变量才会被 "),v("a",{attrs:{href:"https://webpack.js.org/plugins/define-plugin/#root",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack.DefinePlugin"),v("OutboundLink")],1),e._v(" 注入客户端测的代码中，可以在你的应用代码中这样使用环境变量：")]),e._v(" "),v("div",{staticClass:"language-javascript line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[e._v('// 注意 APP_URL 对应的值将会变成 "https://example.mock.com"')]),e._v("\nconsole"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("process"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("env"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token constant"}},[e._v("APP_URL")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br"),v("span",{staticClass:"line-number"},[e._v("2")]),v("br")])]),v("p",[e._v("除了以 "),v("code",[e._v("/^APP_/")]),e._v(" 开头的环境变量外，还有一些特殊的环境变量也可以在应用中访问到：")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("NODE_ENV")]),e._v(" 将会是 "),v("code",[e._v("development")]),e._v(" 、 "),v("code",[e._v("production")]),e._v(" 中的一个。")]),e._v(" "),v("li",[v("code",[e._v("BASE_URL")]),e._v(" 取 "),v("code",[e._v("luban.config.js")]),e._v(" 配置中的 "),v("code",[e._v("publicPath")]),e._v(" 选项，即应用部署时的基础路径。")])]),e._v(" "),v("h2",{attrs:{id:"只在本地有效的变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#只在本地有效的变量"}},[e._v("#")]),e._v(" 只在本地有效的变量")]),e._v(" "),v("p",[e._v("有的时候你可能有一些不应该提交到代码仓库中的变量，尤其是当你的项目托管在公共仓库时。这种情况下你应该使用一个 "),v("em",[e._v(".env.local")]),e._v(" 文件取而代之。本地环境文件默认会被忽略，且出现在 "),v("em",[e._v(".gitignore")]),e._v(" 文件中。")]),e._v(" "),v("p",[v("em",[e._v(".local")]),e._v(" 也可以加在指定模式的环境文件上，比如 "),v("em",[e._v(".env.development.local")]),e._v(" 将会在 development 模式下被载入，且被 git 忽略。")])])}),[],!1,null,null,null);s.default=n.exports}}]);